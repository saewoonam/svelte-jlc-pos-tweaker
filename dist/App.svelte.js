/* src/App.svelte generated by Svelte v3.32.3 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	set_data,
	text
} from "../_snowpack/pkg/svelte/internal.js";

import { onMount } from "../_snowpack/pkg/svelte.js";

function create_fragment(ctx) {
	let div;
	let p;
	let t0;
	let code;
	let t1;
	let t2;

	return {
		c() {
			div = element("div");
			p = element("p");
			t0 = text("Page has been open for ");
			code = element("code");
			t1 = text(/*count*/ ctx[0]);
			t2 = text(" seconds.");
			attr(div, "class", "App");
		},
		m(target, anchor) {
			insert(target, div, anchor);
			append(div, p);
			append(p, t0);
			append(p, code);
			append(code, t1);
			append(p, t2);
		},
		p(ctx, [dirty]) {
			if (dirty & /*count*/ 1) set_data(t1, /*count*/ ctx[0]);
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(div);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let count = 0;

	onMount(() => {
		const interval = setInterval(() => $$invalidate(0, count++, count), 1000);

		return () => {
			clearInterval(interval);
		};
	});

	return [count];
}

class App extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default App;